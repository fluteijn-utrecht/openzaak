dist: xenial

language: python

cache: pip

python: 3.7

services:
  - postgresql
  - docker

addons:
  postgresql: "10"
  apt:
    packages:
    - postgresql-10-postgis-2.4

env:
  global:
  - DJANGO_SETTINGS_MODULE=openzaak.conf.ci
  - DB_PASSWORD=
  - DB_USER=postgres
  - ALLOWED_HOSTS=openzaak.nl

before_install:
  - sudo apt-get update
  - sudo apt-get install libgdal-dev gdal-bin
  - gdal-config --version
  # https://github.com/travis-ci/travis-ci/issues/8920
  - python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"

install:
  - pip install -r requirements/ci.txt
  - pip install codecov
  - npm ci
  - npm run build

before_script:
  - psql -U postgres -c "create extension postgis"
  # https://github.com/travis-ci/travis-ci/issues/8982#issuecomment-354357640
  - python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"

jobs:
  include:
    # Run jobs in parallel in stage Tests
    - stage: "Tests"
      name: "Unit tests"
      services:
        - docker
      script:
        - docker-compose -f docker-compose.travis-cmis.yml up -d
        - python src/manage.py collectstatic --noinput --link
        - export CMIS_BINDING=BROWSER
        - coverage run src/manage.py test src
      after_script:
        - docker-compose -f docker-compose.travis-cmis.yml down -v --rmi all --remove-orphans

    - name: "Unit tests CMIS web service (SOAP)"
      services:
        - docker
      script:
        - docker-compose -f docker-compose.travis-cmis.yml up -d
        - python src/manage.py collectstatic --noinput --link
        - export CMIS_BINDING=WEBSERVICE
        - coverage run src/manage.py test src --tag=cmis
      after_script:
        - docker-compose -f docker-compose.travis-cmis.yml down -v --rmi all --remove-orphans
      after_failure:
        - docker ps
        - docker-compose logs --tail=20

    - name: "Code imports"
      before_install: skip
      install: pip install -r requirements/ci.txt
      before_script: skip
      script: isort --check-only --diff .

    - name: "Code format"
      before_install: skip
      install: pip install -r requirements/ci.txt
      before_script: skip
      script: black --check src --diff

    - name: "Code style"
      before_install: skip
      install: pip install -r requirements/ci.txt
      before_script: skip
      script: flake8 src

    - name: "Documentation build"
      install:
        - pip install pytest -r requirements/dev.txt
      before_script: skip
      script: cd docs && pytest check_sphinx.py -v --tb=auto

    - name: "Docker image build"
      before_install: skip
      install: skip
      before_script: skip
      script: docker build .

    - stage: "VNG API test platform"
      name: "ZGW API tests"
      language: node_js
      node_js:
        - 8
      services:
        - docker
      before_install: skip
      install:
        - npm install newman
      before_script: skip
      script:
        - docker-compose -f docker-compose.travis.yml up -d
        - bin/postman_tests.sh
      after_script:
        - docker-compose -f docker-compose.travis.yml stop
        - docker-compose -f docker-compose.travis.yml rm -f

    - stage: "Publication"
      name: "Docker image"
      if: fork = false
      before_install: skip
      install: skip
      before_script: skip
      script: echo "noop"
      after_success: echo "trigger deploy?"
      deploy:
        - provider: script
          script: bin/docker_push.sh latest
          on:
            branch: master

        - provider: script
          script: bin/docker_push.sh $TRAVIS_TAG
          on:
            tags: true

after_success:
  - codecov
